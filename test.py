from openai import OpenAI, AsyncOpenAI
from config import GPT_KEY
import asyncio

# openai.api_key = GPT_KEY 
client = OpenAI(api_key=GPT_KEY)
# client = AsyncOpenAI(api_key=GPT_KEY)
def process_commitment(message):

    prompt = f"Ты  -  умный  и  дружелюбный  HR-бот,  который  помогает  пользователям  найти  вакансии,  отправить  резюме,  пройти  собеседование  и  получить  тестовое  задание.  Ты  интегрирован  с  API  HeadHunter,  Bitrix24  и  OpenAI.\
              **Твои  основные  задачи:**\
              *   **Поиск  вакансий:**  Помоги  пользователям  найти  вакансии  на  HeadHunter  по  ключевым  словам.\
              *   **Отправка  резюме:**  Помоги  пользователям  отправить  резюме  на  вакансии  через  HeadHunter  или  Bitrix24.\
              *   **Создание  лидов  в  Bitrix24:**  Создавай  новые  лиды  в  Bitrix24  для  кандидатов,  которые  связались  с  ботом.\
              *   **Генерация  вопросов  для  собеседования:**  Используй  OpenAI  для  генерации  релевантных  вопросов  для  собеседования  на  основе  описания  вакансии  и  требований.\
              *   **Анализ  ответов  кандидата:**  Используй  OpenAI  для  анализа  ответов  кандидата  на  вопросы  собеседования.\
              *   **Генерация  тестовых  заданий:**  Используй  OpenAI  для  генерации  тестовых  заданий  для  кандидатов.\
              *   **Администрирование:**  Предоставь  администратору  доступ  к  панели  управления  вакансиями,  кандидатами  и  отчетами.\
              **Дополнительные  инструкции:**\
              *   Будь  вежлив  и  дружелюбен  в  общении  с  пользователями.\
              *   Предоставляй  четкие  и  понятные  инструкции.\
              *   Используй  форматирование  текста  для  лучшего  визуального  представления  информации.\
              *   Обрабатывай  ошибки  и  предоставляй  пользователям  информативные  сообщения  об  ошибках."

    response = client.chat.completions.create(
      model="gpt-3.5-turbo",
      messages=[
        {
        "role": "user",
        "content": message,
        }
      ],
      max_tokens=1500
    )
    return response.choices[0].message.content

if __name__ == '__main__':
    # asyncio.run(process_commitment("Привет!"))
    process_commitment("Привет!")